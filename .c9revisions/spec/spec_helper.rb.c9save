{"ts":1353971685813,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"# This file is copied to spec/ when you run 'rails generate rspec:install'\nENV[\"RAILS_ENV\"] ||= 'test'\nrequire File.expand_path(\"../../config/environment\", __FILE__)\nrequire 'rspec/rails'\nrequire 'rspec/autorun'\n\n# Requires supporting ruby files with custom matchers and macros, etc,\n# in spec/support/ and its subdirectories.\nDir[Rails.root.join(\"spec/support/**/*.rb\")].each {|f| require f}\n\nRSpec.configure do |config|\n  # ## Mock Framework\n  #\n  # If you prefer to use mocha, flexmock or RR, uncomment the appropriate line:\n  #\n  # config.mock_with :mocha\n  # config.mock_with :flexmock\n  # config.mock_with :rr\n\n  # Remove this line if you're not using ActiveRecord or ActiveRecord fixtures\n  config.fixture_path = \"#{::Rails.root}/spec/fixtures\"\n\n  # If you're not using ActiveRecord, or you'd prefer not to run each of your\n  # examples within a transaction, remove the following line or assign false\n  # instead of true.\n  config.use_transactional_fixtures = true\n\n  # If true, the base class of anonymous controllers will be inferred\n  # automatically. This will be the default behavior in future versions of\n  # rspec-rails.\n  config.infer_base_class_for_anonymous_controllers = false\n\n  # Run specs in random order to surface order dependencies. If you find an\n  # order dependency and want to debug it, you can fix the order by providing\n  # the seed, which is printed after each run.\n  #     --seed 1234\n  config.order = \"random\"\nend\n"]],"start1":0,"start2":0,"length1":0,"length2":1447}]],"length":1447}
{"contributors":["wklhuey@gmail.com"],"silentsave":true,"ts":1353971690975,"patch":[[{"diffs":[[0,"with :rr"],[1,"\n  "],[0,"\n\n  # Re"]],"start1":607,"start2":607,"length1":16,"length2":19}]],"length":1450,"saved":false}
{"ts":1353971692400,"patch":[[{"diffs":[[0,"h :rr\n  "],[1,"  "],[0,"\n\n  # Re"]],"start1":610,"start2":610,"length1":16,"length2":18}]],"length":1452,"saved":false}
{"ts":1353971693318,"patch":[[{"diffs":[[0,":rr\n    "],[1,"con"],[0,"\n\n  # Re"]],"start1":612,"start2":612,"length1":16,"length2":19}]],"length":1455,"saved":false}
{"ts":1353971694289,"patch":[[{"diffs":[[0,"\n    con"],[1,"fig"],[0,"\n\n  # Re"]],"start1":615,"start2":615,"length1":16,"length2":19}]],"length":1458,"saved":false}
{"ts":1353971696530,"patch":[[{"diffs":[[0,"  config"],[1,".mock-"],[0,"\n\n  # Re"]],"start1":618,"start2":618,"length1":16,"length2":22}]],"length":1464,"saved":false}
{"ts":1353971698022,"patch":[[{"diffs":[[0,"fig.mock"],[-1,"-"],[0,"\n\n  # Re"]],"start1":623,"start2":623,"length1":17,"length2":16}]],"length":1463,"saved":false}
{"ts":1353971701830,"patch":[[{"diffs":[[0,"fig.mock"],[1,"_with "],[0,"\n\n  # Re"]],"start1":623,"start2":623,"length1":16,"length2":22}]],"length":1469,"saved":false}
{"ts":1353971702968,"patch":[[{"diffs":[[0,"ock_with"],[-1," "],[0,"\n\n  # Re"]],"start1":628,"start2":628,"length1":17,"length2":16}]],"length":1468,"saved":false}
{"ts":1353971704378,"patch":[[{"diffs":[[0,"ock_with"],[1,"  "],[0,"\n\n  # Re"]],"start1":628,"start2":628,"length1":16,"length2":18}]],"length":1470,"saved":false}
{"ts":1353971706838,"patch":[[{"diffs":[[0,"k_with  "],[1,":"],[0,"\n\n  # Re"]],"start1":630,"start2":630,"length1":16,"length2":17}]],"length":1471,"saved":false}
{"ts":1353971708563,"patch":[[{"diffs":[[0,"ck_with "],[-1," "],[0,":\n\n  # R"]],"start1":629,"start2":629,"length1":17,"length2":16}]],"length":1470,"saved":false}
{"ts":1353971714384,"patch":[[{"diffs":[[0,"k_with :"],[1,"rspec"],[0,"\n\n  # Re"]],"start1":630,"start2":630,"length1":16,"length2":21}]],"length":1475,"saved":false}
{"contributors":["wklhuey@gmail.com","btbinhtran@gmail.com"],"silentsave":false,"ts":1353975886265,"patch":[[{"diffs":[[1,"require 'rubygems'\nrequire 'spork'\n#uncomment the following line to use spork with the debugger\n#require 'spork/ext/ruby-debug'\n\nSpork.prefork do\n  # Loading more in this block will cause your tests to run faster. However,\n  # if you change any configuration or code from libraries loaded here, you'll\n  # need to restart spork for it take effect.\n  "],[0,"# This f"]],"start1":0,"start2":0,"length1":8,"length2":358},{"diffs":[[0,"nstall'\n"],[1,"  "],[0,"ENV[\"RAI"]],"start1":417,"start2":417,"length1":16,"length2":18},{"diffs":[[0," 'test'\n"],[1,"  "],[0,"require "]],"start1":447,"start2":447,"length1":16,"length2":18},{"diffs":[[0,"FILE__)\n"],[1,"  "],[0,"require "]],"start1":512,"start2":512,"length1":16,"length2":18},{"diffs":[[0,"/rails'\n"],[1,"  "],[0,"require "]],"start1":536,"start2":536,"length1":16,"length2":18},{"diffs":[[0,"utorun'\n"],[-1,"\n"],[1,"  require 'capybara/rspec'\n  \n  "],[0,"# Requir"]],"start1":562,"start2":562,"length1":17,"length2":48},{"diffs":[[0,"s, etc,\n"],[1,"  "],[0,"# in spe"]],"start1":665,"start2":665,"length1":16,"length2":18},{"diffs":[[0,"tories.\n"],[1,"  "],[0,"Dir[Rail"]],"start1":710,"start2":710,"length1":16,"length2":18},{"diffs":[[0,"uire f}\n"],[-1,"\n"],[1,"  \n  "],[0,"RSpec.co"]],"start1":778,"start2":778,"length1":17,"length2":21},{"diffs":[[0,"config|\n"],[1,"  "],[0,"  # ## M"]],"start1":811,"start2":811,"length1":16,"length2":18},{"diffs":[[0,"ework\n  "],[1," "],[1," "],[0,"#\n"],[1,"  "],[0,"  # If y"]],"start1":837,"start2":837,"length1":18,"length2":22},{"diffs":[[0,"line:\n  "],[1," "],[1," "],[0,"#\n"],[1,"  "],[0,"  # conf"]],"start1":925,"start2":925,"length1":18,"length2":22},{"diffs":[[0,"mocha\n  "],[1," "],[1," "],[0,"# config"]],"start1":961,"start2":961,"length1":16,"length2":18},{"diffs":[[0,"lexmock\n"],[1,"  "],[0,"  # conf"]],"start1":992,"start2":992,"length1":16,"length2":18},{"diffs":[[0," :rspec\n"],[-1,"\n"],[1,"  \n  "],[0,"  # Remo"]],"start1":1047,"start2":1047,"length1":17,"length2":21},{"diffs":[[0,"ixtures\n"],[1,"  "],[0,"  config"]],"start1":1131,"start2":1131,"length1":16,"length2":18},{"diffs":[[0,"xtures\"\n"],[-1,"\n"],[1,"  \n "],[0,"  "],[1," "],[0,"# If you"]],"start1":1189,"start2":1189,"length1":19,"length2":23},{"diffs":[[0," your\n  "],[1," "],[1," "],[0,"# exampl"]],"start1":1274,"start2":1274,"length1":16,"length2":18},{"diffs":[[0,"false\n  "],[1," "],[1," "],[0,"# instea"]],"start1":1353,"start2":1353,"length1":16,"length2":18},{"diffs":[[0,"f true.\n"],[1,"  "],[0,"  config"]],"start1":1374,"start2":1374,"length1":16,"length2":18},{"diffs":[[0," = true\n"],[-1,"\n"],[1,"  \n  "],[0,"  # If t"]],"start1":1419,"start2":1419,"length1":17,"length2":21},{"diffs":[[0,"erred\n  "],[1," "],[1," "],[0,"# automa"]],"start1":1496,"start2":1496,"length1":16,"length2":18},{"diffs":[[0,"ions of\n"],[1,"  "],[0,"  # rspe"]],"start1":1571,"start2":1571,"length1":16,"length2":18},{"diffs":[[0,"ails.\n  "],[1," "],[1," "],[0,"config.i"]],"start1":1592,"start2":1592,"length1":16,"length2":18},{"diffs":[[0,"= false\n"],[-1,"\n"],[1,"  \n  "],[0,"  # Run "]],"start1":1652,"start2":1652,"length1":17,"length2":21},{"diffs":[[0,"find an\n"],[1,"  "],[0,"  # orde"]],"start1":1733,"start2":1733,"length1":16,"length2":18},{"diffs":[[0,"oviding\n"],[1,"  "],[0,"  # the "]],"start1":1813,"start2":1813,"length1":16,"length2":18},{"diffs":[[0,"ch run.\n"],[1,"  "],[0,"  #     "]],"start1":1862,"start2":1862,"length1":16,"length2":18},{"diffs":[[0,"ed 1234\n"],[1,"  "],[0,"  config"]],"start1":1884,"start2":1884,"length1":16,"length2":18},{"diffs":[[0,"om\"\n"],[1,"  "],[0,"end\n"],[1,"end\n\nSpork.each_run do\n  # This code will be run each time you run your specs.\n\nend\n\n# --- Instructions ---\n# Sort the contents of this file into a Spork.prefork and a Spork.each_run\n# block.\n#\n# The Spork.prefork block is run only once when the spork server is started.\n# You typically want to place most of your (slow) initializer code in here, in\n# particular, require'ing any 3rd-party gems that you don't normally modify\n# during development.\n#\n# The Spork.each_run block is run each time you run your specs.  In case you\n# need to load files that tend to change during development, require them here.\n# With Rails, your application modules are loaded automatically, so sometimes\n# this block can remain empty.\n#\n# Note: You can modify files loaded *from* the Spork.each_run block without\n# restarting the spork server.  However, this file itself will not be reloaded,\n# so if you change any of the code inside the each_run block, you still need to\n# restart the server.  In general, if you have non-trivial code in this file,\n# it's advisable to move it into a separate file so you can easily edit it\n# without restarting spork.  (For example, with RSpec, you could move\n# non-trivial code into a file spec/support/my_helper.rb, making sure that the\n# spec/support/* files are require'd from inside the each_run block.)\n#\n# Any code that is left outside the two blocks will be run during preforking\n# *and* during each_run -- that's probably not what you want.\n#\n# These instructions should self-destruct in 10 seconds.  If they don't, feel\n# free to delete them.\n"]],"start1":1916,"start2":1916,"length1":8,"length2":1580}]],"length":3496,"saved":false}
{"ts":1353976455179,"patch":[[{"diffs":[[0,"debug'\n\n"],[1,"module ::RSpec::Core\n  class ExampleGroup\n    include Capybara::DSL\n    include Capybara::RSpecMatchers\n  end\nend \n\n"],[0,"Spork.pr"]],"start1":121,"start2":121,"length1":16,"length2":132}]],"length":3612,"saved":false}
{"ts":1353976567753,"patch":[[{"diffs":[[0,"g'\n\n"],[-1,"module ::RSpec::Core\n  class ExampleGroup\n    include Capybara::DSL\n    include Capybara::RSpecMatchers\n  end\nend \n"],[0,"\nSpo"]],"start1":125,"start2":125,"length1":123,"length2":8}]],"length":3497,"saved":false}
